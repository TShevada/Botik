import os
import logging
import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiohttp import web

# ====================
# –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
# ====================
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")  # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
ADMIN_ID = int(os.getenv("ADMIN_ID")) if os.getenv("ADMIN_ID") else None  # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
PORT = int(os.getenv("PORT", 10000))     # Render —Ç—Ä–µ–±—É–µ—Ç —É–∫–∞–∑–∞—Ç—å –ø–æ—Ä—Ç

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
)
logger = logging.getLogger(__name__)

# ====================
# –ö–õ–ê–í–ò–ê–¢–£–†–´
# ====================
def main_keyboard():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    buttons = [
        [KeyboardButton(text="üé´ –ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç")],
        [KeyboardButton(text="üìÖ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"), KeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")],
        [KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")]
    ]
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)

# ====================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–û–ú–ê–ù–î
# ====================
@dp.message(Command("start"))
async def start(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    try:
        await message.answer(
            "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞!\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=main_keyboard()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ /start: {e}")

@dp.message(F.text == "üé´ –ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç")
async def buy_ticket(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–∫—É–ø–∫–∏ –±–∏–ª–µ—Ç–∞"""
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –±–∏–ª–µ—Ç–∞:\n\n‚Ä¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç - 20‚Çº\n‚Ä¢ VIP - 40‚Çº")

@dp.message(F.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
async def contacts(message: types.Message):
    """–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"""
    await message.answer("–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:\n–¢–µ–ª–µ—Ñ–æ–Ω: +994 12 345 67 89")

# ====================
# –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–¨
# ====================
@dp.message(Command("admin"), F.from_user.id == ADMIN_ID)
async def admin_panel(message: types.Message):
    """–ö–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    await message.answer("üîß –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:\n/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n/users - —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

# ====================
# HTTP-–°–ï–†–í–ï–† –î–õ–Ø RENDER
# ====================
async def http_handler(request):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤"""
    return web.Response(text="ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ polling!")

async def run_bot():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    try:
        await dp.start_polling(bot)
    except Exception as e:
        logger.critical(f"–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞: {e}")
        raise

# ====================
# –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø
# ====================
async def main():
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞"""
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ
    bot_task = asyncio.create_task(run_bot())

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º HTTP-—Å–µ—Ä–≤–µ—Ä
    app = web.Application()
    app.router.add_get("/", http_handler)
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, "0.0.0.0", PORT)
    await site.start()

    logger.info(f"üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {PORT}")
    await asyncio.Event().wait()  # –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        logger.critical(f"–§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
